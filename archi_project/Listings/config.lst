


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000                 AREA             |.text|, CODE, READONLY
    6 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    7 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
    8 00000000         
    9 00000000         ; The GPIODATA register is the data register
   10 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   11 00000000         
   12 00000000         ; The GPIODATA register is the data register
   13 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   14 00000000         
   15 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
   16 00000000         
   17 00000000         ; configure the corresponding pin to be an output
   18 00000000         ; all GPIO pins are inputs by default
   19 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   20 00000000         
   21 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   22 00000000         ; By default, all GPIO pins have 2-mA drive.
   23 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   24 00000000         
   25 00000000         ; Digital enable register
   26 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   27 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 



ARM Macro Assembler    Page 2 


                                                            de lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; Pul_up -> impulsion
   30 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   31 00000000         
   32 00000000         ; Broches select
   33 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   34 00000000         ;ethernet led 
   35 00000000 0000003C 
                       BROCHE2_3
                               EQU              0x3C        ; led1 & led2 sur b
                                                            roche 2 et 3
   36 00000000         
   37 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   38 00000000         
   39 00000000 00000001 
                       BROCHE0 EQU              0x01        ;Bumper_gauhce
   40 00000000 00000002 
                       BROCHE1 EQU              0x02        ;Bumper_droit
   41 00000000         
   42 00000000 00000003 
                       BROCHE0_1
                               EQU              0x03        ;Les deux bumpers
   43 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   44 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   45 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   46 00000000         
   47 00000000         
   48 00000000         
   49 00000000         ; blinking frequency
   50 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   51 00000000                 ENTRY
   52 00000000                 EXPORT           __main
   53 00000000         
   54 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   55 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   56 00000000         
   57 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit



ARM Macro Assembler    Page 3 


   58 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   59 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   60 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   61 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   62 00000000         
   63 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   64 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   65 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   66 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   67 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   68 00000000         
   69 00000000         
   70 00000000         __main
   71 00000000         
   72 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   73 00000000         ; ;;         
   74 00000000 4E4F            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   75 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   76 00000006         ; ;;                              (GPIO::FEDCBA)
   77 00000006 6030            str              r0, [r6]    ; ajout le périphér
                                                            ique GPIO dans la c
                                                            lock
   78 00000008         
   79 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   80 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   81 0000000A BF00            nop
   82 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   83 0000000E         
   84 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   85 0000000E         
   86 0000000E 4E4D            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 



ARM Macro Assembler    Page 4 


                                                            : 00010000)
   87 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   88 00000014 6030            str              r0, [r6]
   89 00000016         
   90 00000016 4E4C            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   91 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   92 0000001C 6030            str              r0, [r6]
   93 0000001E         
   94 0000001E 4E4B            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   95 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   96 00000024 6030            str              r0, [r6]
   97 00000026         
   98 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   99 0000002A         
  100 0000002A         ; allumer la led broche 4 (BROCHE4_5)
  101 0000002A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
  102 0000002E         
  103 0000002E 4E48            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  104 00000030         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED
  105 00000030         
  106 00000030         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED ETHERNE
                       T
  107 00000030         
  108 00000030 4D44            ldr              r5, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
  109 00000032 F04F 003C       ldr              r0, = BROCHE2_3
  110 00000036 6028            str              r0, [r5]
  111 00000038         
  112 00000038 4D43            ldr              r5, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  113 0000003A F04F 003C       ldr              r0, = BROCHE2_3
  114 0000003E 6028            str              r0, [r5]
  115 00000040         
  116 00000040 4D42            ldr              r5, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  117 00000042 F04F 003C       ldr              r0, = BROCHE2_3
  118 00000046 6028            str              r0, [r5]



ARM Macro Assembler    Page 5 


  119 00000048         
  120 00000048         ;mov r9, #0x000            ;; pour eteindre LED
  121 00000048         
  122 00000048         ; allumer la led broche 4 (BROCHE4_5)
  123 00000048         ;mov r3, #BROCHE2_3  ;; Allume LED1&2 portF broche 4&5 :
                        00110000
  124 00000048         
  125 00000048         ;ldr r5, = GPIO_PORTF_BASE + (BROCHE2_3<<2)  ;; @data Re
                       gister = @base + (mask<<2) ==> LED1
  126 00000048         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED
  127 00000048         
  128 00000048         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1
  129 00000048         
  130 00000048 4F42            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  131 0000004A F04F 0040       ldr              r0, = BROCHE6
  132 0000004E 6038            str              r0, [r7]
  133 00000050         
  134 00000050 4F41            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  135 00000052 F04F 0040       ldr              r0, = BROCHE6
  136 00000056 6038            str              r0, [r7]
  137 00000058         
  138 00000058 4F40            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  139 0000005A         
  140 0000005A         
  141 0000005A         
  142 0000005A F8DF 8104       ldr              r8, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  143 0000005E F04F 0003       ldr              r0, = BROCHE0_1
  144 00000062 F8C8 0000       str              r0, [r8]
  145 00000066         
  146 00000066 F8DF 80FC       ldr              r8, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  147 0000006A F04F 0003       ldr              r0, = BROCHE0_1
  148 0000006E F8C8 0000       str              r0, [r8]
  149 00000072         
  150 00000072         
  151 00000072         
  152 00000072         ; Configure les PWM + GPIO
  153 00000072 F7FF FFFE       BL               MOTEUR_INIT
  154 00000076         ;; BL Branchement vers un lien (sous programme)
  155 00000076 4E36            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  156 00000078 6033            str              r3, [r6]
  157 0000007A         
  158 0000007A         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  159 0000007A         
  160 0000007A         
  161 0000007A         switch1
  162 0000007A         
  163 0000007A F8D7 C000       ldr              r12, [r7]



ARM Macro Assembler    Page 6 


  164 0000007E F1BC 0F00       CMP              r12,#0x00
  165 00000082 D1FA            BNE              switch1
  166 00000084         
  167 00000084         ; Activer les deux moteurs droit et gauche
  168 00000084 F7FF FFFE       BL               MOTEUR_DROIT_ON
  169 00000088 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  170 0000008C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  171 00000090 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  172 00000094         
  173 00000094         ; Avancement pendant une période (deux WAIT)
  174 00000094 F000 F80D       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
  175 00000098 F000 F80B       BL               WAIT
  176 0000009C         
  177 0000009C         
  178 0000009C         clignotement
  179 0000009C         
  180 0000009C 4E2C            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  181 0000009E 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  182 000000A0 4931            ldr              r1, = DUREE
  183 000000A2         wait1
  184 000000A2 3901            subs             r1, #1
  185 000000A4 D1FD            bne              wait1
  186 000000A6 4E2A            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  187 000000A8 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  188 000000AA 492F            ldr              r1, = DUREE
  189 000000AC         ;; Boucle d'attente
  190 000000AC 3901    wait2   subs             r1,#1
  191 000000AE D1FD            bne              wait2
  192 000000B0         
  193 000000B0 E7F4            b                clignotement
  194 000000B2 492E    WAIT    ldr              r1, =0xAFFFFF
  195 000000B4         ;; pour la duree de la boucle d'attente2 (wait2)
  196 000000B4         ROTATION
  197 000000B4         ;Au moment de faire les rotations, pour pouvoir écouter 
                       les autres ports, à chaque fois qu'on rentre dans le wai
                       t faires clignoter les leds
  198 000000B4         ; peut être mettre un compteur dans cette boucle pour ne
                        pas activer les leds a chaque fois et faire une crise d
                       'épilepsie 
  199 000000B4         bump_gauche
  200 000000B4 F8DF 80B8       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  201 000000B8 F8D8 E000       ldr              r14, [r8]
  202 000000BC F1BE 0F00       CMP              r14,#0x00
  203 000000C0 D100            BNE              bump_droit
  204 000000C2 E007            b                init_gauche
  205 000000C4         
  206 000000C4         bump_droit
  207 000000C4 F8DF 80AC       ldr              r8, = GPIO_PORTE_BASE + (BROCHE



ARM Macro Assembler    Page 7 


1<<2) 
                                                            ;bumper droit
  208 000000C8 F8D8 E000       ldr              r14, [r8]
  209 000000CC F1BE 0F00       CMP              r14, #0x00
  210 000000D0 D1F0            BNE              bump_gauche
  211 000000D2 E017            b                init_droit
  212 000000D4         init_gauche
  213 000000D4 4E28            ldr              r6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  214 000000D6 F44F 70C0       mov              r0, #0x180  ; vitesse de la rou
                                                            e droite
  215 000000DA 6030            str              r0, [r6]
  216 000000DC F7FF FFFE       BL               MOTEUR_DROIT_AVANT ;fait tourne
                                                            r une roue dans l'a
                                                            utre sens moins vit
                                                            e pour tourner
  217 000000E0 4E1B            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  218 000000E2 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00 
  219 000000E4 4E25            ldr              r6, = GPIO_PORTF_BASE + (0x10<<
2)
  220 000000E6 6033            str              r3, [r6]
  221 000000E8 F000 F824       BL               TEMP
  222 000000EC         
  223 000000EC         rotation_gauche
  224 000000EC 4E22            ldr              r6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  225 000000EE F04F 0050       mov              r0, #0x50
  226 000000F2 6030            str              r0, [r6]
  227 000000F4 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  228 000000F8 4E15            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  229 000000FA 6033            str              r3, [r6]    ;; Eteint LED car r
                                                            2 = 0x00
  230 000000FC F1BE 0F00       CMP              r14,#0x00
  231 00000100 D1D8            BNE              bump_gauche
  232 00000102 E7F3            b                rotation_gauche
  233 00000104         
  234 00000104         init_droit
  235 00000104 4E1E            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  236 00000106 F44F 70C0       mov              r0, #0x180  ; vitesse de la rou
                                                            e droite
  237 0000010A 6030            str              r0, [r6]
  238 0000010C F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT ;fait tourn
                                                            er une roue dans l'
                                                            autre sens moins vi
                                                            te pour tourner
  239 00000110 4E0F            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  240 00000112 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00 



ARM Macro Assembler    Page 8 


  241 00000114 4E1B            ldr              r6, = GPIO_PORTF_BASE + (0x20<<
2)
  242 00000116 6033            str              r3, [r6]
  243 00000118 F000 F80C       BL               TEMP
  244 0000011C         
  245 0000011C         rotation_droite
  246 0000011C 4E18            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  247 0000011E F04F 0050       mov              r0, #0x50
  248 00000122 6030            str              r0, [r6]
  249 00000124 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  250 00000128 4E09            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  251 0000012A 6033            str              r3, [r6]
  252 0000012C F1BE 0F00       CMP              r14,#0x00
  253 00000130 D1C8            BNE              bump_droit
  254 00000132 E7F3            b                rotation_droite
  255 00000134         
  256 00000134 4914    TEMP    ldr              r1, =0xEFFFF
  257 00000136 3901    wait6   subs             r1, #1
  258 00000138 D1FD            bne              wait6
  259 0000013A D1BB            bne              ROTATION
  260 0000013C         ;; retour à la suite d u lien de branchement
  261 0000013C 4770            BX               LR
  262 0000013E BF00            NOP
  263 00000140                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              40007510 
              4000751C 
              40007100 
              40024510 
              4002451C 
              002FFFFF 
              00AFFFFF 
              40024004 
              40024008 
              40028058 
              40025040 
              40028098 
              40025080 
              000EFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\config.d -o.\objects\config.o -I.\RTE\_Target_1 -IC:\Use
rs\audri\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\
audri\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\config.lst config.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 5 in file config.s
   Uses
      None
Comment: .text unused
ROTATION 000000B4

Symbol: ROTATION
   Definitions
      At line 196 in file config.s
   Uses
      At line 259 in file config.s
Comment: ROTATION used once
TEMP 00000134

Symbol: TEMP
   Definitions
      At line 256 in file config.s
   Uses
      At line 221 in file config.s
      At line 243 in file config.s

WAIT 000000B2

Symbol: WAIT
   Definitions
      At line 194 in file config.s
   Uses
      At line 174 in file config.s
      At line 175 in file config.s

__main 00000000

Symbol: __main
   Definitions
      At line 70 in file config.s
   Uses
      At line 52 in file config.s
Comment: __main used once
bump_droit 000000C4

Symbol: bump_droit
   Definitions
      At line 206 in file config.s
   Uses
      At line 203 in file config.s
      At line 253 in file config.s

bump_gauche 000000B4

Symbol: bump_gauche
   Definitions
      At line 199 in file config.s
   Uses
      At line 210 in file config.s
      At line 231 in file config.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


clignotement 0000009C

Symbol: clignotement
   Definitions
      At line 178 in file config.s
   Uses
      At line 193 in file config.s
Comment: clignotement used once
init_droit 00000104

Symbol: init_droit
   Definitions
      At line 234 in file config.s
   Uses
      At line 211 in file config.s
Comment: init_droit used once
init_gauche 000000D4

Symbol: init_gauche
   Definitions
      At line 212 in file config.s
   Uses
      At line 204 in file config.s
Comment: init_gauche used once
rotation_droite 0000011C

Symbol: rotation_droite
   Definitions
      At line 245 in file config.s
   Uses
      At line 254 in file config.s
Comment: rotation_droite used once
rotation_gauche 000000EC

Symbol: rotation_gauche
   Definitions
      At line 223 in file config.s
   Uses
      At line 232 in file config.s
Comment: rotation_gauche used once
switch1 0000007A

Symbol: switch1
   Definitions
      At line 161 in file config.s
   Uses
      At line 165 in file config.s
Comment: switch1 used once
wait1 000000A2

Symbol: wait1
   Definitions
      At line 183 in file config.s
   Uses
      At line 185 in file config.s
Comment: wait1 used once
wait2 000000AC




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: wait2
   Definitions
      At line 190 in file config.s
   Uses
      At line 191 in file config.s
Comment: wait2 used once
wait6 00000136

Symbol: wait6
   Definitions
      At line 257 in file config.s
   Uses
      At line 258 in file config.s
Comment: wait6 used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 39 in file config.s
   Uses
      At line 200 in file config.s
Comment: BROCHE0 used once
BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 42 in file config.s
   Uses
      At line 143 in file config.s
      At line 147 in file config.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 40 in file config.s
   Uses
      At line 207 in file config.s
Comment: BROCHE1 used once
BROCHE2_3 0000003C

Symbol: BROCHE2_3
   Definitions
      At line 35 in file config.s
   Uses
      At line 109 in file config.s
      At line 113 in file config.s
      At line 117 in file config.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 33 in file config.s
   Uses
      At line 87 in file config.s
      At line 91 in file config.s
      At line 95 in file config.s
      At line 101 in file config.s
      At line 103 in file config.s
      At line 155 in file config.s
      At line 180 in file config.s
      At line 186 in file config.s
      At line 217 in file config.s
      At line 228 in file config.s
      At line 239 in file config.s
      At line 250 in file config.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 37 in file config.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 131 in file config.s
      At line 135 in file config.s
      At line 138 in file config.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 50 in file config.s
   Uses
      At line 182 in file config.s
      At line 188 in file config.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 30 in file config.s
   Uses
      At line 130 in file config.s
      At line 142 in file config.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 27 in file config.s
   Uses
      At line 90 in file config.s
      At line 112 in file config.s
      At line 134 in file config.s
      At line 146 in file config.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 19 in file config.s
   Uses
      At line 86 in file config.s
      At line 108 in file config.s

GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 23 in file config.s
   Uses
      At line 94 in file config.s
      At line 116 in file config.s

GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 13 in file config.s
   Uses
      At line 130 in file config.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 134 in file config.s
      At line 138 in file config.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 15 in file config.s
   Uses
      At line 142 in file config.s
      At line 146 in file config.s
      At line 200 in file config.s
      At line 207 in file config.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 10 in file config.s
   Uses
      At line 86 in file config.s
      At line 90 in file config.s
      At line 94 in file config.s
      At line 103 in file config.s
      At line 108 in file config.s
      At line 112 in file config.s
      At line 116 in file config.s
      At line 155 in file config.s
      At line 180 in file config.s
      At line 186 in file config.s
      At line 217 in file config.s
      At line 219 in file config.s
      At line 228 in file config.s
      At line 239 in file config.s
      At line 241 in file config.s
      At line 250 in file config.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 44 in file config.s
   Uses
      At line 213 in file config.s
      At line 224 in file config.s

PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 45 in file config.s
   Uses
      At line 235 in file config.s
      At line 246 in file config.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 43 in file config.s
   Uses
      At line 44 in file config.s
      At line 45 in file config.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 7 in file config.s
   Uses
      At line 74 in file config.s
Comment: SYSCTL_PERIPH_GPIO used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 60 in file config.s
   Uses
      At line 170 in file config.s
      At line 227 in file config.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 59 in file config.s
   Uses
      At line 216 in file config.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 61 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 58 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 57 in file config.s
   Uses
      At line 168 in file config.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 66 in file config.s
   Uses
      At line 171 in file config.s
      At line 249 in file config.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 65 in file config.s
   Uses
      At line 238 in file config.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 67 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 64 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 63 in file config.s
   Uses
      At line 169 in file config.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 55 in file config.s
   Uses
      At line 153 in file config.s
Comment: MOTEUR_INIT used once
11 symbols
382 symbols in table
