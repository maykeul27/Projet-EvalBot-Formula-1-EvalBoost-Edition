


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    8 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
    9 00000000         
   10 00000000         ; The GPIODATA register is the data register
   11 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   12 00000000         
   13 00000000         ; The GPIODATA register is the data register
   14 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   15 00000000         
   16 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
   17 00000000         
   18 00000000         ; configure the corresponding pin to be an output
   19 00000000         ; all GPIO pins are inputs by default
   20 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   21 00000000         
   22 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   23 00000000         ; By default, all GPIO pins have 2-mA drive.
   24 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   25 00000000         
   26 00000000         ; Digital enable register
   27 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   28 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab



ARM Macro Assembler    Page 2 


                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   29 00000000         
   30 00000000         ; Pul_up
   31 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   32 00000000         
   33 00000000         ; Broches select
   34 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   35 00000000         
   36 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   37 00000000         
   38 00000000 00000001 
                       BROCHE0 EQU              0x01        ;Bumper
   39 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   40 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   41 00000000         
   42 00000000         ; blinking frequency
   43 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   44 00000000                 ENTRY
   45 00000000                 EXPORT           __main
   46 00000000         
   47 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   48 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   49 00000000         
   50 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   51 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   52 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   53 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   54 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   55 00000000         
   56 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   57 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l



ARM Macro Assembler    Page 3 


                                                            e moteur gauche
   58 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   59 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   60 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   61 00000000         
   62 00000000         
   63 00000000         __main
   64 00000000         
   65 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   66 00000000         ; ;;         
   67 00000000 4E33            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   68 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   69 00000006         ; ;;                              (GPIO::FEDCBA)
   70 00000006 6030            str              r0, [r6]
   71 00000008         
   72 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   73 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   74 0000000A BF00            nop
   75 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   76 0000000E         
   77 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   78 0000000E         
   79 0000000E 4E31            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   80 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   81 00000014 6030            str              r0, [r6]
   82 00000016         
   83 00000016 4E30            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   84 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   85 0000001C 6030            str              r0, [r6]
   86 0000001E         
   87 0000001E 4E2F            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   88 00000020 F04F 0030       ldr              r0, = BROCHE4_5



ARM Macro Assembler    Page 4 


   89 00000024 6030            str              r0, [r6]
   90 00000026         
   91 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   92 0000002A         
   93 0000002A         ; allumer la led broche 4 (BROCHE4_5)
   94 0000002A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
   95 0000002E         
   96 0000002E 4E2C            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
   97 00000030         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
   98 00000030         
   99 00000030         
  100 00000030         
  101 00000030         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1
  102 00000030         
  103 00000030 4F2C            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  104 00000032 F04F 0040       ldr              r0, = BROCHE6
  105 00000036 6038            str              r0, [r7]
  106 00000038         
  107 00000038 4F2B            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  108 0000003A F04F 0040       ldr              r0, = BROCHE6
  109 0000003E 6038            str              r0, [r7]
  110 00000040         
  111 00000040 4F2A            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  112 00000042         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  113 00000042         
  114 00000042         
  115 00000042         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper gauc
                       he
  116 00000042 F8DF D0AC       ldr              r13, = GPIO_PORTE_BASE+GPIO_I_P
UR 
                                                            ;; Pul_up 
  117 00000046 F04F 0001       ldr              r0, = BROCHE0
  118 0000004A 9000            str              r0, [r13]
  119 0000004C         
  120 0000004C F8DF D0A4       ldr              r13, = GPIO_PORTE_BASE+GPIO_O_D
EN 
                                                            ;; Enable Digital F
                                                            unction 
  121 00000050 F04F 0001       ldr              r0, = BROCHE0
  122 00000054 9000            str              r0, [r13]
  123 00000056         
  124 00000056 F8DF D0A0       ldr              r13, = GPIO_PORTE_BASE + (BROCH
E0<<2) 



ARM Macro Assembler    Page 5 


                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  125 0000005A         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  126 0000005A         
  127 0000005A         
  128 0000005A         ; Configure les PWM + GPIO
  129 0000005A F7FF FFFE       BL               MOTEUR_INIT
  130 0000005E         ;; BL Branchement vers un lien (sous programme)
  131 0000005E 4E20            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  132 00000060 6033            str              r3, [r6]
  133 00000062         
  134 00000062         
  135 00000062         switch1
  136 00000062         
  137 00000062 F8D7 C000       ldr              r12, [r7]
  138 00000066 F1BC 0F00       CMP              r12,#0x00
  139 0000006A D1FA            BNE              switch1
  140 0000006C         
  141 0000006C         ; Activer les deux moteurs droit et gauche
  142 0000006C F7FF FFFE       BL               MOTEUR_DROIT_ON
  143 00000070 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  144 00000074         
  145 00000074         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  146 00000074         ;loop 
  147 00000074         ; Evalbot avance droit devant
  148 00000074 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  149 00000078 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  150 0000007C         
  151 0000007C         ; Avancement pendant une période (deux WAIT)
  152 0000007C F000 F80D       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
  153 00000080 F000 F80B       BL               WAIT
  154 00000084         
  155 00000084         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
  156 00000084         ;BL MOTEUR_DROIT_ARRIERE   ; MOTEUR_DROIT_INVERSE
  157 00000084         ;BL WAIT
  158 00000084         
  159 00000084         ;b loop
  160 00000084         
  161 00000084         loop
  162 00000084 4E16            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  163 00000086 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  164 00000088 491C            ldr              r1, = DUREE
  165 0000008A         wait1
  166 0000008A 3901            subs             r1, #1
  167 0000008C D1FD            bne              wait1
  168 0000008E 4E14            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  169 00000090 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00



ARM Macro Assembler    Page 6 


                                                            110000 (contenu de 
                                                            r3)
  170 00000092 491A            ldr              r1, = DUREE
  171 00000094         ;; Boucle d'attente
  172 00000094 3901    wait2   subs             r1,#1
  173 00000096 D1FD            bne              wait2
  174 00000098         
  175 00000098 E7F4            b                loop
  176 0000009A 4919    WAIT    ldr              r1, =0xAFFFFF
  177 0000009C         ;; pour la duree de la boucle d'attente2 (wait2)
  178 0000009C         wait13
  179 0000009C         ;Au moment de faire les rotations, pour pouvoir écouter 
                       les autres ports, à chaque fois qu'on rentre dans le wai
                       t faires clignoter les leds
  180 0000009C         ; peut êtee mettre un compteur dans cette boucle pour ne
                        pas activer les leds a chaque fois et faire une crise d
                       'épilepsie 
  181 0000009C         bump1
  182 0000009C         ;b loop
  183 0000009C F8DD E000       ldr              r14, [r13]
  184 000000A0 F1BE 0F00       CMP              r14,#0x00
  185 000000A4 D1FA            BNE              bump1
  186 000000A6         loop2
  187 000000A6 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  188 000000AA F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  189 000000AE F000 F809       BL               WAIT5
  190 000000B2         
  191 000000B2 4E14            ldr              r6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  192 000000B4 F44F 70C1       mov              r0, 0x182
  193 000000B8 6030            str              r0, [r6]
  194 000000BA         
  195 000000BA F7FF FFFE       BL               MOTEUR_DROIT_AVANT ;MOTEUR_DROI
                                                            T_INVERSE
  196 000000BE F000 F801       BL               WAIT5
  197 000000C2 E7F0            b                loop2
  198 000000C4 490E    WAIT5   ldr              r1, =0xAFFFFF
  199 000000C6 3901    wait6   subs             r1, #1
  200 000000C8 D1FD            bne              wait6
  201 000000CA         
  202 000000CA         
  203 000000CA D1E7            bne              wait13
  204 000000CC         ;; retour à la suite du lien de branchement
  205 000000CC 4770            BX               LR
  206 000000CE         
  207 000000CE         
  208 000000CE BF00            NOP
  209 000000D0                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              40007510 
              4000751C 
              40007100 
              40024510 



ARM Macro Assembler    Page 7 


              4002451C 
              40024004 
              002FFFFF 
              00AFFFFF 
              40028058 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\config.d -o.\objects\config.o -I.\RTE\_Target_1 -IC:\Use
rs\Ragavi\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users
\Ragavi\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\Device\ARM\ARMCM3\Include --pre
define="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_V
ERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=
.\listings\config.lst config.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file config.s
   Uses
      None
Comment: .text unused
WAIT 0000009A

Symbol: WAIT
   Definitions
      At line 176 in file config.s
   Uses
      At line 152 in file config.s
      At line 153 in file config.s

WAIT5 000000C4

Symbol: WAIT5
   Definitions
      At line 198 in file config.s
   Uses
      At line 189 in file config.s
      At line 196 in file config.s

__main 00000000

Symbol: __main
   Definitions
      At line 63 in file config.s
   Uses
      At line 45 in file config.s
Comment: __main used once
bump1 0000009C

Symbol: bump1
   Definitions
      At line 181 in file config.s
   Uses
      At line 185 in file config.s
Comment: bump1 used once
loop 00000084

Symbol: loop
   Definitions
      At line 161 in file config.s
   Uses
      At line 175 in file config.s
Comment: loop used once
loop2 000000A6

Symbol: loop2
   Definitions
      At line 186 in file config.s
   Uses
      At line 197 in file config.s
Comment: loop2 used once
switch1 00000062



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: switch1
   Definitions
      At line 135 in file config.s
   Uses
      At line 139 in file config.s
Comment: switch1 used once
wait1 0000008A

Symbol: wait1
   Definitions
      At line 165 in file config.s
   Uses
      At line 167 in file config.s
Comment: wait1 used once
wait13 0000009C

Symbol: wait13
   Definitions
      At line 178 in file config.s
   Uses
      At line 203 in file config.s
Comment: wait13 used once
wait2 00000094

Symbol: wait2
   Definitions
      At line 172 in file config.s
   Uses
      At line 173 in file config.s
Comment: wait2 used once
wait6 000000C6

Symbol: wait6
   Definitions
      At line 199 in file config.s
   Uses
      At line 200 in file config.s
Comment: wait6 used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 38 in file config.s
   Uses
      At line 117 in file config.s
      At line 121 in file config.s
      At line 124 in file config.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 34 in file config.s
   Uses
      At line 80 in file config.s
      At line 84 in file config.s
      At line 88 in file config.s
      At line 94 in file config.s
      At line 96 in file config.s
      At line 131 in file config.s
      At line 162 in file config.s
      At line 168 in file config.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 36 in file config.s
   Uses
      At line 104 in file config.s
      At line 108 in file config.s
      At line 111 in file config.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 43 in file config.s
   Uses
      At line 164 in file config.s
      At line 170 in file config.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 31 in file config.s
   Uses
      At line 103 in file config.s
      At line 116 in file config.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 28 in file config.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 83 in file config.s
      At line 107 in file config.s
      At line 120 in file config.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 20 in file config.s
   Uses
      At line 79 in file config.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 24 in file config.s
   Uses
      At line 87 in file config.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 14 in file config.s
   Uses
      At line 103 in file config.s
      At line 107 in file config.s
      At line 111 in file config.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 16 in file config.s
   Uses
      At line 116 in file config.s
      At line 120 in file config.s
      At line 124 in file config.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 11 in file config.s
   Uses
      At line 79 in file config.s
      At line 83 in file config.s
      At line 87 in file config.s
      At line 96 in file config.s
      At line 131 in file config.s
      At line 162 in file config.s
      At line 168 in file config.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 40 in file config.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 191 in file config.s
Comment: PWM0CMPA used once
PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 39 in file config.s
   Uses
      At line 40 in file config.s
Comment: PWM_BASE used once
SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 8 in file config.s
   Uses
      At line 67 in file config.s
Comment: SYSCTL_PERIPH_GPIO used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 53 in file config.s
   Uses
      At line 148 in file config.s
      At line 187 in file config.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 52 in file config.s
   Uses
      At line 195 in file config.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 54 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 51 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 50 in file config.s
   Uses
      At line 142 in file config.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 59 in file config.s
   Uses
      At line 149 in file config.s
      At line 188 in file config.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 58 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_AVANT unused
MOTEUR_GAUCHE_INVERSE 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 60 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 57 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 56 in file config.s
   Uses
      At line 143 in file config.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 48 in file config.s
   Uses
      At line 129 in file config.s
Comment: MOTEUR_INIT used once
11 symbols
374 symbols in table
