


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    8 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
    9 00000000         
   10 00000000         ; The GPIODATA register is the data register
   11 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   12 00000000         
   13 00000000         ; The GPIODATA register is the data register
   14 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   15 00000000         
   16 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
   17 00000000         
   18 00000000         ; configure the corresponding pin to be an output
   19 00000000         ; all GPIO pins are inputs by default
   20 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   21 00000000         
   22 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   23 00000000         ; By default, all GPIO pins have 2-mA drive.
   24 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   25 00000000         
   26 00000000         ; Digital enable register
   27 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   28 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab



ARM Macro Assembler    Page 2 


                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   29 00000000         
   30 00000000         ; Pul_up
   31 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   32 00000000         
   33 00000000         ; Broches select
   34 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   35 00000000         
   36 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   37 00000000         
   38 00000000 00000001 
                       BROCHE0 EQU              0x01        ;Bumper
   39 00000000         
   40 00000000         ; blinking frequency
   41 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   42 00000000                 ENTRY
   43 00000000                 EXPORT           __main
   44 00000000         
   45 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   46 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   47 00000000         
   48 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   49 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   50 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   51 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   52 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   53 00000000         
   54 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   55 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   56 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   57 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière



ARM Macro Assembler    Page 3 


   58 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   59 00000000         
   60 00000000         
   61 00000000         __main
   62 00000000         
   63 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   64 00000000         ; ;;         
   65 00000000 4E24            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   66 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   67 00000006         ; ;;                              (GPIO::FEDCBA)
   68 00000006 6030            str              r0, [r6]
   69 00000008         
   70 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   71 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   72 0000000A BF00            nop
   73 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   74 0000000E         
   75 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   76 0000000E         
   77 0000000E 4E22            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   78 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   79 00000014 6030            str              r0, [r6]
   80 00000016         
   81 00000016 4E21            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   82 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   83 0000001C 6030            str              r0, [r6]
   84 0000001E         
   85 0000001E 4E20            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   86 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   87 00000024 6030            str              r0, [r6]
   88 00000026         
   89 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   90 0000002A         
   91 0000002A         ; allumer la led broche 4 (BROCHE4_5)
   92 0000002A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2



ARM Macro Assembler    Page 4 


                                                             portF broche 4&5 :
                                                             00110000
   93 0000002E         
   94 0000002E 4E1D            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
   95 00000030         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
   96 00000030         
   97 00000030         
   98 00000030         
   99 00000030         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1
  100 00000030         
  101 00000030 4F1D            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  102 00000032 F04F 0040       ldr              r0, = BROCHE6
  103 00000036 6038            str              r0, [r7]
  104 00000038         
  105 00000038 4F1C            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  106 0000003A F04F 0040       ldr              r0, = BROCHE6
  107 0000003E 6038            str              r0, [r7]
  108 00000040         
  109 00000040 4F1B            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  110 00000042         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  111 00000042         
  112 00000042         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper droi
                       t
  113 00000042         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  114 00000042         
  115 00000042         ; Configure les PWM + GPIO
  116 00000042 F7FF FFFE       BL               MOTEUR_INIT
  117 00000046         ;; BL Branchement vers un lien (sous programme)
  118 00000046 4E17            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  119 00000048 6033            str              r3, [r6]
  120 0000004A         leto
  121 0000004A         
  122 0000004A F8D7 C000       ldr              r12, [r7]
  123 0000004E F1BC 0F00       CMP              r12,#0x00
  124 00000052 D1FA            BNE              leto
  125 00000054         
  126 00000054         ;ReadState
  127 00000054         
  128 00000054         ;ldr r10,[r7]
  129 00000054         ;CMP r10,#0x00
  130 00000054         ;BNE ReadState
  131 00000054         
  132 00000054         
  133 00000054         ; Activer les deux moteurs droit et gauche
  134 00000054 F7FF FFFE       BL               MOTEUR_DROIT_ON



ARM Macro Assembler    Page 5 


  135 00000058 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  136 0000005C         
  137 0000005C         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  138 0000005C         ;loop 
  139 0000005C         ; Evalbot avance droit devant
  140 0000005C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  141 00000060 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  142 00000064         
  143 00000064         ; Avancement pendant une période (deux WAIT)
  144 00000064 F000 F811       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
  145 00000068 F000 F80F       BL               WAIT
  146 0000006C         
  147 0000006C         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
  148 0000006C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE ; MOTEUR_D
                                                            ROIT_INVERSE
  149 00000070 F000 F80B       BL               WAIT
  150 00000074         
  151 00000074         ;b loop
  152 00000074         
  153 00000074         loop2
  154 00000074 4E0B            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  155 00000076 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  156 00000078 490E            ldr              r1, = DUREE
  157 0000007A         wait1
  158 0000007A 3901            subs             r1, #1
  159 0000007C D1FD            bne              wait1
  160 0000007E 4E09            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  161 00000080 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  162 00000082 490C            ldr              r1, = DUREE
  163 00000084         ;; Boucle d'attante
  164 00000084 3901    wait2   subs             r1,#1
  165 00000086 D1FD            bne              wait2
  166 00000088         
  167 00000088 E7F4            b                loop2
  168 0000008A 490B    WAIT    ldr              r1, =0xAFFFFF
  169 0000008C         ;; pour la duree de la boucle d'attente2 (wait2)
  170 0000008C         wait13
  171 0000008C         ;Au moment de faire les rotations, pour pouvoir écouter 
                       les autres ports, à chaque fois qu'on rentre dans le wai
                       t faires clignoter les leds
  172 0000008C         ; peut êtee mettre un compteur dans cette boucle pour ne
                        pas activer les leds a chaque fois et faire une crise d
                       'épilepsie 
  173 0000008C 3901            subs             r1, #1
  174 0000008E D1FD            bne              wait13
  175 00000090         ;; retour à la suite du lien de branchement
  176 00000090 4770            BX               LR



ARM Macro Assembler    Page 6 


  177 00000092         
  178 00000092 BF00            NOP
  179 00000094                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              40007510 
              4000751C 
              40007100 
              002FFFFF 
              00AFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\config.d -o.\objects\config.o -I.\RTE\_Target_1 -IC:\Use
rs\Ragavi\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users
\Ragavi\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\Device\ARM\ARMCM3\Include --pre
define="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_V
ERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=
.\listings\config.lst config.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file config.s
   Uses
      None
Comment: .text unused
WAIT 0000008A

Symbol: WAIT
   Definitions
      At line 168 in file config.s
   Uses
      At line 144 in file config.s
      At line 145 in file config.s
      At line 149 in file config.s

__main 00000000

Symbol: __main
   Definitions
      At line 61 in file config.s
   Uses
      At line 43 in file config.s
Comment: __main used once
leto 0000004A

Symbol: leto
   Definitions
      At line 120 in file config.s
   Uses
      At line 124 in file config.s
Comment: leto used once
loop2 00000074

Symbol: loop2
   Definitions
      At line 153 in file config.s
   Uses
      At line 167 in file config.s
Comment: loop2 used once
wait1 0000007A

Symbol: wait1
   Definitions
      At line 157 in file config.s
   Uses
      At line 159 in file config.s
Comment: wait1 used once
wait13 0000008C

Symbol: wait13
   Definitions
      At line 170 in file config.s
   Uses
      At line 174 in file config.s
Comment: wait13 used once
wait2 00000084



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: wait2
   Definitions
      At line 164 in file config.s
   Uses
      At line 165 in file config.s
Comment: wait2 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 38 in file config.s
   Uses
      None
Comment: BROCHE0 unused
BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 34 in file config.s
   Uses
      At line 78 in file config.s
      At line 82 in file config.s
      At line 86 in file config.s
      At line 92 in file config.s
      At line 94 in file config.s
      At line 118 in file config.s
      At line 154 in file config.s
      At line 160 in file config.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 36 in file config.s
   Uses
      At line 102 in file config.s
      At line 106 in file config.s
      At line 109 in file config.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 41 in file config.s
   Uses
      At line 156 in file config.s
      At line 162 in file config.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 31 in file config.s
   Uses
      At line 101 in file config.s
Comment: GPIO_I_PUR used once
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 28 in file config.s
   Uses
      At line 81 in file config.s
      At line 105 in file config.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 20 in file config.s
   Uses
      At line 77 in file config.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 24 in file config.s
   Uses
      At line 85 in file config.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 14 in file config.s
   Uses
      At line 101 in file config.s
      At line 105 in file config.s
      At line 109 in file config.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 16 in file config.s
   Uses
      None
Comment: GPIO_PORTE_BASE unused
GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 11 in file config.s
   Uses
      At line 77 in file config.s
      At line 81 in file config.s
      At line 85 in file config.s
      At line 94 in file config.s
      At line 118 in file config.s
      At line 154 in file config.s
      At line 160 in file config.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 8 in file config.s
   Uses
      At line 65 in file config.s
Comment: SYSCTL_PERIPH_GPIO used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 51 in file config.s
   Uses
      At line 140 in file config.s
      At line 148 in file config.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 50 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_AVANT unused
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 52 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 49 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 48 in file config.s
   Uses
      At line 134 in file config.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 57 in file config.s
   Uses
      At line 141 in file config.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 56 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_AVANT unused
MOTEUR_GAUCHE_INVERSE 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 58 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 55 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 54 in file config.s
   Uses
      At line 135 in file config.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 46 in file config.s
   Uses
      At line 116 in file config.s
Comment: MOTEUR_INIT used once
11 symbols
368 symbols in table
