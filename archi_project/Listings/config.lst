


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    3 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    8 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
    9 00000000         
   10 00000000         ; The GPIODATA register is the data register
   11 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   12 00000000         
   13 00000000         ; The GPIODATA register is the data register
   14 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   15 00000000         
   16 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
   17 00000000         
   18 00000000         ; configure the corresponding pin to be an output
   19 00000000         ; all GPIO pins are inputs by default
   20 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   21 00000000         
   22 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   23 00000000         ; By default, all GPIO pins have 2-mA drive.
   24 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   25 00000000         
   26 00000000         ; Digital enable register
   27 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   28 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab



ARM Macro Assembler    Page 2 


                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   29 00000000         
   30 00000000         ; Pul_up -> impulsion
   31 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   32 00000000         
   33 00000000         ; Broches select
   34 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   35 00000000         
   36 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   37 00000000         
   38 00000000         ;BROCHE0    EQU     0x01   ;Bumper
   39 00000000 00000002 
                       BROCHE1 EQU              0x02        ;Bumper
   40 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   41 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   42 00000000         
   43 00000000         
   44 00000000         
   45 00000000         ; blinking frequency
   46 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   47 00000000                 ENTRY
   48 00000000                 EXPORT           __main
   49 00000000         
   50 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   51 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   52 00000000         
   53 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   54 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   55 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   56 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   57 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   58 00000000         



ARM Macro Assembler    Page 3 


   59 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   60 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   61 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   62 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   63 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   64 00000000         
   65 00000000         
   66 00000000         __main
   67 00000000         
   68 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   69 00000000         ; ;;         
   70 00000000 4E36            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   71 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   72 00000006         ; ;;                              (GPIO::FEDCBA)
   73 00000006 6030            str              r0, [r6]    ; ajout le périphér
                                                            ique GPIO dans la c
                                                            lock
   74 00000008         
   75 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   76 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   77 0000000A BF00            nop
   78 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   79 0000000E         
   80 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   81 0000000E         
   82 0000000E 4E34            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   83 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   84 00000014 6030            str              r0, [r6]
   85 00000016         
   86 00000016 4E33            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   87 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   88 0000001C 6030            str              r0, [r6]
   89 0000001E         
   90 0000001E 4E32            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR



ARM Macro Assembler    Page 4 


2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   91 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   92 00000024 6030            str              r0, [r6]
   93 00000026         
   94 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   95 0000002A         
   96 0000002A         ; allumer la led broche 4 (BROCHE4_5)
   97 0000002A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
   98 0000002E         
   99 0000002E 4E2F            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  100 00000030         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
  101 00000030         
  102 00000030         
  103 00000030         
  104 00000030         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1
  105 00000030         
  106 00000030 4F2F            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  107 00000032 F04F 0040       ldr              r0, = BROCHE6
  108 00000036 6038            str              r0, [r7]
  109 00000038         
  110 00000038 4F2E            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  111 0000003A F04F 0040       ldr              r0, = BROCHE6
  112 0000003E 6038            str              r0, [r7]
  113 00000040         
  114 00000040 4F2D            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  115 00000042         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  116 00000042         
  117 00000042         
  118 00000042         
  119 00000042         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper gauc
                       he
  120 00000042         ;ldr r13, = GPIO_PORTE_BASE+GPIO_I_PUR ;; Pul_up 
  121 00000042         ;ldr r0, = BROCHE0  
  122 00000042         ;str r0, [r13]
  123 00000042         
  124 00000042         ;ldr r13, = GPIO_PORTE_BASE+GPIO_O_DEN ;; Enable Digital
                        Function 
  125 00000042         ;ldr r0, = BROCHE0
  126 00000042         ;str r0, [r13]     
  127 00000042         



ARM Macro Assembler    Page 5 


  128 00000042         ;ldr r13, = GPIO_PORTE_BASE + (BROCHE0<<2)  ;; @data Reg
                       ister = @base + (mask<<2) ==> Switcher
  129 00000042         
  130 00000042         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper droi
                       t
  131 00000042 F8DF 80B8       ldr              r8, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  132 00000046 F04F 0002       ldr              r0, = BROCHE1
  133 0000004A F8C8 0000       str              r0, [r8]
  134 0000004E         
  135 0000004E F8DF 80B0       ldr              r8, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  136 00000052 F04F 0002       ldr              r0, = BROCHE1
  137 00000056 F8C8 0000       str              r0, [r8]
  138 0000005A         
  139 0000005A F8DF 80A8       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  140 0000005E         
  141 0000005E         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher
  142 0000005E         
  143 0000005E         
  144 0000005E         ; Configure les PWM + GPIO
  145 0000005E F7FF FFFE       BL               MOTEUR_INIT
  146 00000062         ;; BL Branchement vers un lien (sous programme)
  147 00000062 4E22            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  148 00000064 6033            str              r3, [r6]
  149 00000066         
  150 00000066         
  151 00000066         switch1
  152 00000066         
  153 00000066 F8D7 C000       ldr              r12, [r7]
  154 0000006A F1BC 0F00       CMP              r12,#0x00
  155 0000006E D1FA            BNE              switch1
  156 00000070         
  157 00000070         ; Activer les deux moteurs droit et gauche
  158 00000070 F7FF FFFE       BL               MOTEUR_DROIT_ON
  159 00000074 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  160 00000078 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  161 0000007C F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  162 00000080         
  163 00000080         ; Avancement pendant une période (deux WAIT)
  164 00000080 F000 F80D       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
  165 00000084 F000 F80B       BL               WAIT
  166 00000088         
  167 00000088         
  168 00000088         clignotement
  169 00000088         
  170 00000088 4E18            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  171 0000008A 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      



ARM Macro Assembler    Page 6 


  172 0000008C 491E            ldr              r1, = DUREE
  173 0000008E         wait1
  174 0000008E 3901            subs             r1, #1
  175 00000090 D1FD            bne              wait1
  176 00000092 4E16            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  177 00000094 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  178 00000096 491C            ldr              r1, = DUREE
  179 00000098         ;; Boucle d'attente
  180 00000098 3901    wait2   subs             r1,#1
  181 0000009A D1FD            bne              wait2
  182 0000009C         
  183 0000009C E7F4            b                clignotement
  184 0000009E 491B    WAIT    ldr              r1, =0xAFFFFF
  185 000000A0         ;; pour la duree de la boucle d'attente2 (wait2)
  186 000000A0         wait13
  187 000000A0         ;Au moment de faire les rotations, pour pouvoir écouter 
                       les autres ports, à chaque fois qu'on rentre dans le wai
                       t faires clignoter les leds
  188 000000A0         ; peut êtee mettre un compteur dans cette boucle pour ne
                        pas activer les leds a chaque fois et faire une crise d
                       'épilepsie 
  189 000000A0         bump1
  190 000000A0         ;b loop
  191 000000A0 F8D8 E000       ldr              r14, [r8]
  192 000000A4 F1BE 0F00       CMP              r14,#0x00
  193 000000A8 D1FA            BNE              bump1
  194 000000AA 4E19            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  195 000000AC F44F 70C1       mov              r0, #0x182  ; vitesse de la rou
                                                            e gauche
  196 000000B0 6030            str              r0, [r6]
  197 000000B2         
  198 000000B2 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT ;fait tourn
                                                            er une roue dans l'
                                                            autre sens moins vi
                                                            te pour tourner
  199 000000B6 F000 F80A       BL               WAIT5
  200 000000BA         loop2
  201 000000BA 4E15            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  202 000000BC F04F 0050       mov              r0, #0x50
  203 000000C0 6030            str              r0, [r6]
  204 000000C2 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  205 000000C6 F1BE 0F00       CMP              r14,#0x00
  206 000000CA D1E9            BNE              bump1
  207 000000CC E7F5            b                loop2
  208 000000CE 4911    WAIT5   ldr              r1, =0xEFFFF
  209 000000D0 3901    wait6   subs             r1, #1
  210 000000D2 D1FD            bne              wait6
  211 000000D4         
  212 000000D4 D1E4            bne              wait13



ARM Macro Assembler    Page 7 


  213 000000D6         ;; retour à la suite du lien de branchement
  214 000000D6 4770            BX               LR
  215 000000D8 BF00            NOP
  216 000000DA                 END
              00 00 400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              40007510 
              4000751C 
              40007100 
              40024510 
              4002451C 
              40024008 
              002FFFFF 
              00AFFFFF 
              40028098 
              000EFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\config.d -o.\objects\config.o -I.\RTE\_Target_1 -IC:\Use
rs\audri\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\
audri\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\config.lst config.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file config.s
   Uses
      None
Comment: .text unused
WAIT 0000009E

Symbol: WAIT
   Definitions
      At line 184 in file config.s
   Uses
      At line 164 in file config.s
      At line 165 in file config.s

WAIT5 000000CE

Symbol: WAIT5
   Definitions
      At line 208 in file config.s
   Uses
      At line 199 in file config.s
Comment: WAIT5 used once
__main 00000000

Symbol: __main
   Definitions
      At line 66 in file config.s
   Uses
      At line 48 in file config.s
Comment: __main used once
bump1 000000A0

Symbol: bump1
   Definitions
      At line 189 in file config.s
   Uses
      At line 193 in file config.s
      At line 206 in file config.s

clignotement 00000088

Symbol: clignotement
   Definitions
      At line 168 in file config.s
   Uses
      At line 183 in file config.s
Comment: clignotement used once
loop2 000000BA

Symbol: loop2
   Definitions
      At line 200 in file config.s
   Uses
      At line 207 in file config.s
Comment: loop2 used once
switch1 00000066



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: switch1
   Definitions
      At line 151 in file config.s
   Uses
      At line 155 in file config.s
Comment: switch1 used once
wait1 0000008E

Symbol: wait1
   Definitions
      At line 173 in file config.s
   Uses
      At line 175 in file config.s
Comment: wait1 used once
wait13 000000A0

Symbol: wait13
   Definitions
      At line 186 in file config.s
   Uses
      At line 212 in file config.s
Comment: wait13 used once
wait2 00000098

Symbol: wait2
   Definitions
      At line 180 in file config.s
   Uses
      At line 181 in file config.s
Comment: wait2 used once
wait6 000000D0

Symbol: wait6
   Definitions
      At line 209 in file config.s
   Uses
      At line 210 in file config.s
Comment: wait6 used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 39 in file config.s
   Uses
      At line 132 in file config.s
      At line 136 in file config.s
      At line 139 in file config.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 34 in file config.s
   Uses
      At line 83 in file config.s
      At line 87 in file config.s
      At line 91 in file config.s
      At line 97 in file config.s
      At line 99 in file config.s
      At line 147 in file config.s
      At line 170 in file config.s
      At line 176 in file config.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 36 in file config.s
   Uses
      At line 107 in file config.s
      At line 111 in file config.s
      At line 114 in file config.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 46 in file config.s
   Uses
      At line 172 in file config.s
      At line 178 in file config.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 31 in file config.s
   Uses
      At line 106 in file config.s
      At line 131 in file config.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 28 in file config.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 86 in file config.s
      At line 110 in file config.s
      At line 135 in file config.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 20 in file config.s
   Uses
      At line 82 in file config.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 24 in file config.s
   Uses
      At line 90 in file config.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 14 in file config.s
   Uses
      At line 106 in file config.s
      At line 110 in file config.s
      At line 114 in file config.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 16 in file config.s
   Uses
      At line 131 in file config.s
      At line 135 in file config.s
      At line 139 in file config.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 11 in file config.s
   Uses
      At line 82 in file config.s
      At line 86 in file config.s
      At line 90 in file config.s
      At line 99 in file config.s
      At line 147 in file config.s
      At line 170 in file config.s
      At line 176 in file config.s

PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 41 in file config.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 194 in file config.s
      At line 201 in file config.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 40 in file config.s
   Uses
      At line 41 in file config.s
Comment: PWM_BASE used once
SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 8 in file config.s
   Uses
      At line 70 in file config.s
Comment: SYSCTL_PERIPH_GPIO used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 56 in file config.s
   Uses
      At line 160 in file config.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 55 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_AVANT unused
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 57 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 54 in file config.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 53 in file config.s
   Uses
      At line 158 in file config.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 62 in file config.s
   Uses
      At line 161 in file config.s
      At line 204 in file config.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 61 in file config.s
   Uses
      At line 198 in file config.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 63 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 60 in file config.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 59 in file config.s
   Uses
      At line 159 in file config.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 51 in file config.s
   Uses
      At line 145 in file config.s
Comment: MOTEUR_INIT used once
11 symbols
374 symbols in table
